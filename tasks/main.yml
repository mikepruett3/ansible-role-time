---
# tasks file for ansible-role-time/

- name: Include OS-specific variables.
  include_vars: "{{ lookup('first_found', params) }}"
  vars:
    params:
      files:
        - "{{ ansible_os_family }}_{{ ansible_distribution_major_version }}.yaml"
        - "{{ ansible_distribution }}.yaml"
        - "{{ ansible_os_family }}.yaml"
        - default.yaml
      paths:
        - "vars"

- name: "Gather the package facts"
  ansible.builtin.package_facts:
    manager: auto
  when: ansible_facts.packages is not defined

- name: "Set hosts TimeZone"
  timezone:
    name: "{{ timezone }}"

- name: "Remove NTP Daemon, if installed (RHEL7)"
  block:
    - name: "Stop NTP Service, if not already stopped"
      service:
        name: "ntpd"
        state: stopped
        enabled: no
    - name: "Uninstall the NTP Daemon, if installed"
      ansible.builtin.package:
        name: 'ntp'
        state: absent
  when:
    - "'ntp' in ansible_facts.packages"
    - ansible_os_family == 'RedHat'
    - ansible_distribution_major_version >= '7'

- name: "Install required packages, if not already installed"
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  with_items: "{{ packages }}"
  when: item|string not in ansible_facts.packages

- name: "Update NTP configuration file"
  block:
    - name: "Disable existing server entries"
      ansible.builtin.replace:
        path: "{{ ntp_config }}"
        regexp: '^(server.*)$'
        replace: '#\1'
    - name: "Disable existing pool entries"
      ansible.builtin.replace:
        path: "{{ ntp_config }}"
        regexp: '^(pool.*)$'
        replace: '#\1'
    - name: "Insert desired server entires"
      ansible.builtin.lineinfile:
        path: "{{ ntp_config }}"
        insertafter: "EOF"
        line: "server {{ item }}"
        state: present
      with_items: "{{ ntp_servers }}"

- name: "Set Permissions on NTP HomeDir"
  ansible.builtin.file:
    path: "{{ ntp_homedir }}"
    mode: 0750
    state: directory
    recurse: no

- name: "Stop NTP Service"
  ansible.builtin.service:
    name: "{{ ntp_daemon }}"
    state: stopped

- name: "Update current time from configured servers"
  block:
    - name: "Update current time from configured servers (chrony)"
      command: chronyd -q -t 1 'server {{ item }} maxsamples 1'
      with_items: "{{ ntp_servers }}"
      register: ntpdate
      failed_when: ntpdate.rc != 1 and ntpdate.rc != 0
      when: ansible_os_family == 'RedHat' and ansible_distribution_major_version >= '7'
    - name: "Update current time from configured servers (ntpdate)"
      command: ntpdate '{{ primary_ntp_server }}'
      with_items: "{{ ntp_servers }}"
      register: ntpdate
      failed_when: ntpdate.rc != 1 and ntpdate.rc != 0
      when: ansible_os_family == 'RedHat' and ansible_distribution_major_version <= '6'
    - name: "Update current time from configured servers (chrony)"
      command: chronyd -q -t 1 'server {{ item }} maxsamples 1'
      with_items: "{{ ntp_servers }}"
      register: ntpdate
      failed_when: ntpdate.rc != 1 and ntpdate.rc != 0
      when: ansible_os_family == 'Debian'

- name: "Start NTP Service"
  ansible.builtin.service:
    name: "{{ ntp_daemon }}"
    state: started